+------------------+                          
|     Building     |
+------------------+
| - floors: List<Floor>   |
+------------------+
| + addFloor(Floor) |
| + getFloors()     |
+------------------+

+------------------+
|      Floor       |
+------------------+
| - floorNo: int   |
| - spots: List<ParkingSpot> |
+------------------+
| + addSpot()      |
| + getAvailableSpots() |
+------------------+

+------------------------+
|     ParkingSpot        |
+------------------------+
| - id: String           |
| - type: ParkingSpotType|
| - isOccupied: boolean  |
+------------------------+
| + isOccupied()         |
| + assignVehicle()      |
| + removeVehicle()      |
+------------------------+  

 Building
List<Floor> floors

+addFloor(Floor)

+getFloors()

ðŸ§± Floor
int floorNo

List<ParkingSpot> spots

+addSpot(ParkingSpot)

+getAvailableSpots(VehicleType)

ðŸ§± ParkingSpot
String id

ParkingSpotType type

boolean isOccupied

Vehicle vehicle

+assignVehicle(Vehicle)

+removeVehicle()

+isOccupied()

ðŸš— Vehicle (Interface or Abstract Class)
VehicleType type

+getType()

ðŸ›» Subclasses:
Car, Bike, Truck, etc. implement or extend Vehicle

ðŸ“¦ Enums
ParkingSpotType { COMPACT, LARGE, ELECTRIC, BIKE }

VehicleType { CAR, BIKE, TRUCK, ELECTRIC }           

Relationship Mapping
Building â†’ Floor: 1-to-many

Floor â†’ ParkingSpot: 1-to-many

ParkingSpot â†’ Vehicle: 1-to-1 (if occupied)

Vehicle is used for booking

